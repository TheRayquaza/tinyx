{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "repo-user API",
    "version" : "1.0.0-SNAPSHOT"
  },
  "paths" : {
    "/login" : {
      "post" : {
        "summary" : "Login user credentials",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "User JWT",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          },
          "401" : {
            "description" : "User not authorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          },
          "404" : {
            "description" : "User Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "summary" : "Get my user's account",
        "responses" : {
          "200" : {
            "description" : "Current user account retrieved successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Modify my user's account",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModifyUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "User account updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new user account",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "User account created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          },
          "409" : {
            "description" : "Username already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete my user's account",
        "responses" : {
          "204" : {
            "description" : "User account deleted successfully"
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/user/image" : {
      "put" : {
        "summary" : "Upload Profile image for my user's account",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadImageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "User account updated successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}" : {
      "get" : {
        "summary" : "Get a specific user's account",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User account retrieved successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepoUserErrorCode"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreateUserRequest" : {
        "required" : [ "username", "password" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "LocalDateTime" : {
        "format" : "date-time",
        "type" : "string",
        "example" : "2022-03-10T12:15:50"
      },
      "LoginRequest" : {
        "required" : [ "username", "password" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "ModifyUserRequest" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "bio" : {
            "type" : "string"
          }
        }
      },
      "RepoUserErrorCode" : {
        "enum" : [ "USER_NOT_FOUND", "USER_WITH_USERNAME_FOUND", "USER_WITH_USERNAME_ALREADY_EXISTS", "USER_ALREADY_EXISTS", "INVALID_USER_DATA", "UNAUTHORIZED", "FORBIDDEN", "INTERNAL_SERVER_ERROR" ],
        "type" : "string"
      },
      "UploadImageRequest" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "description" : "User ID",
            "type" : "string",
            "example" : "123e4567-e89b-12d3-a456-426614174000"
          },
          "file" : {
            "format" : "binary",
            "description" : "User profile image",
            "type" : "string"
          }
        }
      },
      "UserEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "bio" : {
            "type" : "string"
          },
          "profileImage" : {
            "type" : "string"
          },
          "createdAt" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "updatedAt" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "UserLoginResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "jwt" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "SecurityScheme" : {
        "type" : "http",
        "description" : "Authentication",
        "scheme" : "basic"
      }
    }
  }
}