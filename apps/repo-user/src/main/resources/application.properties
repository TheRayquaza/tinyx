# Quarkus Logs
quarkus.log.level=${repo.user.log.level:INFO}

# Quarkus Swagger & Others
quarkus.swagger-ui.always-include=true
quarkus.resteasy-reactive.path=/
quarkus.smallrye-health.ui.always-include=true

# Quarkus Redis Configuration
repo.user.aggregate.channel=user_aggregate
quarkus.redis.devservices.enabled=false
quarkus.redis.hosts=${repo.user.redis.hosts:redis://localhost:6379}
quarkus.redis.client-type=standalone
quarkus.redis.password=${repo.user.redis.password:admin}

# Quarkus MongoDB Configuration
quarkus.mongodb.connection-string=${repo.user.mongodb.endpoint:mongodb://admin:admin@localhost:27017/RepoUser?retryWrites=true&w=majority&uuidRepresentation=STANDARD}
quarkus.mongodb.devservices.enabled=false

# Quarkus Minio Configuration
s3.endpoint=${repo.user.minio.endpoint:http://localhost:9000}
s3.bucketName=${repo.user.minio.bucket:default}
s3.accessKey=${repo.user.minio.access.key:minioadmin}
s3.secretKey=${repo.user.minio.secret.key:minioadmin}

# Enable and configure logging (adjust as per your needs)
quarkus.log.console.level=${repo.user.log.level:INFO}
quarkus.log.console.format=%d{HH:mm:ss.SSS} %-5p [%t] %c{1.} %m%n

# Application Port (can be passed as env variable)
quarkus.http.port=${repo.user.quarkus.http.port:8080}

# Optional: To use a profile for a specific environment
quarkus.profile=${repo.user.app.profile:dev}

#############################################

# Quarkus dev settings

## Mongodb (should match docker compose)
%dev.quarkus.mongodb.database=RepoUser
%dev.quarkus.mongodb.connection-string=mongodb://admin:admin@localhost:27017/RepoUser?retryWrites=true&w=majority
%dev.quarkus.mongodb.devservices.enabled=false

## Redis (should match docker compose)
%dev.quarkus.redis.hosts=redis://127.0.0.1:6379
%dev.quarkus.redis.password=admin
%dev.quarkus.redis.client-type=standalone
%dev.quarkus.redis.devservices.enabled=false
%dev.repo.user.aggregate.channel=${repo.user.aggregate.channel:user_aggregate}

## Minio (should match docker compose)
%dev.s3.endpoint=http://localhost:9000
%dev.s3.bucketName=default
%dev.s3.accessKeys=minioadmio
%dev.s3.secretKeys=minioadmin
%dev.quarkus.s3.devservices.enabled=false

###############################################

# Quarkus test settings

## Mongodb (should match docker compose)
%test.quarkus.mongodb.database=RepoUser
%test.quarkus.mongodb.connection-string=mongodb://admin:admin@localhost:27017/RepoUser?retryWrites=true&w=majority
%test.quarkus.mongodb.devservices.enabled=false

## Redis (should match docker compose)
%test.quarkus.redis.hosts=redis://127.0.0.1:6379
%test.quarkus.redis.password=admin
%test.quarkus.redis.client-type=standalone
%test.quarkus.redis.devservices.enabled=false
%test.repo.user.aggregate.channel=${repo.user.aggregate.channel:user_aggregate}

## Minio (should match docker compose)
%test.s3.endpoint=http://localhost:9000
%test.s3.bucketName=default
%test.s3.accessKey=minioadmin
%test.s3.secretKeys=minioadmin
%test.quarkus.s3.devservices.enabled=false
