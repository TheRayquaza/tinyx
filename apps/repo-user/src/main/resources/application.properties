# Quarkus Logs
quarkus.log.level=INFO
quarkus.log.category."com.epita.repo_user".level=DEBUG

# Quarkus Swagger & Others
quarkus.swagger-ui.always-include=true
quarkus.resteasy-reactive.path=/

# Quarkus Redis Configuration
repo.user.aggregate.channel=user_aggregate
quarkus.redis.devservices.enabled=false
quarkus.redis.hosts=${repo.user.redis.host:redis://localhost}:6379
quarkus.redis.password=${repo.user.redis.password:}

# Quarkus MongoDB Configuration
repo.user.mongodb.port=27017
quarkus.mongodb.connection-string=mongodb://${repo.user.mongodb.user:admin}:${repo.user.mongodb.password:admin}@${repo.user.mongodb.host:localhost}:${repo.user.mongodb.port:27017}/${repo.user.mongodb.database:RepoUser}?retryWrites=true&w=majority&uuidRepresentation=STANDARD
quarkus.mongodb.database=${repo.user.mongodb.database:RepoUser}
quarkus.mongodb.devservices.enabled=false

# Quarkus Minio Configuration
s3.endpoint=${repo.user.minio.endpoint:http://localhost:9000}
s3.bucketName=${repo.user.minio.bucket:default}
s3.accessKey=${repo.user.minio.access.key:minioadmin}
s3.secretKey=${repo.user.minio.secret.key:minioadmin}

# Enable and configure logging (adjust as per your needs)
quarkus.log.console.level=${repo.user.log.level:INFO}
quarkus.log.console.format=%d{HH:mm:ss.SSS} %-5p [%t] %c{1.} %m%n

# Application Port (can be passed as env variable)
quarkus.http.port=${repo.user.quarkus.http.port:8080}

# Optional: To use a profile for a specific environment
quarkus.profile=${repo.user.app.profile:dev}

# Quarkus dev settings

## Mongodb (should match docker compose)
%dev.quarkus.mongodb.database=${repo.user.mongodb.database:RepoUser}
%dev.quarkus.mongodb.connection-string=mongodb://${repo.user.mongodb.user:admin}:${repo.user.mongodb.password:admin}@${repo.user.mongodb.host:localhost}:${repo.user.mongodb.port:27017}/${repo.user.mongodb.database:RepoUser}?retryWrites=true&w=majority&uuidRepresentation=STANDARD
%dev.quarkus.mongodb.devservices.enabled=false

## Redis (should match docker compose)
%dev.quarkus.redis.hosts=${repo.user.redis.host:localhost}:6379
%dev.quarkus.redis.password=${repo.user.redis.password:}
%dev.quarkus.redis.devservices.enabled=false
%dev.repo.user.aggregate.channel=${repo.user.aggregate.channel:user_aggregate}

## Minio (should match docker compose)
%dev.s3.endpoint=http://localhost:9000
%dev.s3.bucketName=default
%dev.s3.accessKey=minioadmin
%dev.s3.secretKey=minioadmin
%dev.quarkus.s3.devservices.enabled=false
