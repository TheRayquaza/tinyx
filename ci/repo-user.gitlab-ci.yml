repo-user:build:
  extends: .rules_template_repo-user
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  stage: build
  variables:
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_IMAGE: $DOCKER_REGISTRY/repo-user
    DOCKER_TAG: $CI_COMMIT_SHA
  script:
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context . --dockerfile Dockerfiles/repo-user.Dockerfile --destination $DOCKER_IMAGE:$DOCKER_TAG

repo-user:lint:
  extends: .rules_template_repo-user
  image: maven:3.8.5-eclipse-temurin-17-alpine
  stage: lint
  script:
    - cd apps/repo-user
    - mvn spotless:check

repo-user:test:
  extends: .rules_template_repo-user
  image: maven:3.8.5-eclipse-temurin-17-alpine
  stage: test
  services:
    - name: mongo:8.0.6-noble
      alias: mongo
      command: ["mongod", "--bind_ip_all"]
  before_script:
    - echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/main' >> /etc/apk/repositories
    - echo 'http://dl-cdn.alpinelinux.org/alpine/v3.9/community' >> /etc/apk/repositories
    - apk update && apk add --no-cache mongodb yaml-cpp=0.6.2-r2
    - export MONGOMS_SYSTEM_BINARY=/usr/bin/mongod
    - |
      mongo mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/RepoUser?authSource=admin --eval '
      db.createUser({
        user: ${MONGO_INITDB_ROOT_USERNAME},
        pwd: ${MONGO_INITDB_ROOT_PASSWORD},
        roles: [
          {
            role: "readWrite",
            db: "RepoUser"
          }
        ]
      });
      db.createCollection("UserModel");'

  script:
    - echo "Running tests..." # TODO: Replace with actual test command
