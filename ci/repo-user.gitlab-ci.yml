cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/

repo-user:build:
  extends: .rules_build_repo-user
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
    pull_policy: if-not-present
  stage: build
  variables:
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_IMAGE: $DOCKER_REGISTRY/repo-user
    DOCKER_TAG: $CI_COMMIT_SHA
  script:
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context . --dockerfile Dockerfiles/repo-user.Dockerfile --destination $DOCKER_IMAGE:$DOCKER_TAG

repo-user:lint:
  extends: .rules_template_repo-user
  image:
    name: maven:3.8.5-eclipse-temurin-17-alpine
    pull_policy: if-not-present
  stage: lint
  cache:
    key: ${CI_COMMIT_REF_SLUG}-maven
    paths:
      - .m2/repository/
  script:
    - cd apps/repo-user
    - mvn spotless:check

repo-user:test:
  extends: .rules_template_repo-user
  image:
    name: maven:3.8.5-eclipse-temurin-17
    pull_policy: if-not-present
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}-maven
    paths:
      - .m2/repository/
  services:
    - name: mongo:8.0.6-noble
      alias: mongo
      pull_policy: if-not-present
    - name: redis:8.0-M04-alpine3.21
      alias: redis
      pull_policy: if-not-present
      command: ["redis-server","--requirepass", "admin"]
    - name: minio/minio:latest
      alias: minio
      pull_policy: if-not-present
      command: ["server","/data", "--console-address",":9001"]
  variables:
    MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    MONGO_INITDB_DATABASE: RepoUser
    REPO_USER_MONGO_HOST: mongo
    REPO_USER_REDIS_HOST: redis
    REPO_USER_REDIS_PASSWORD: admin
    REPO_USER_MINIO_HOST: minio
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
    REPO_USER_APP_PROFILE: prod
  script:
    - apt-get update -y
    - apt-get install -y gnupg wget
    - wget -qO- https://www.mongodb.org/static/pgp/server-8.0.asc | tee /etc/apt/trusted.gpg.d/server-8.0.asc
    - echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-8.0.list
    - apt-get update -y
    - apt-get install -y mongodb-mongosh
    - cd apps/
    - mvn install -N && mvn install -pl exchange
    - cd repo-user
    - mongosh -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --host mongo src/main/resources/init.js
    -  mvn clean test -Dquarkus.profile=prod -Dquarkus.mongodb.connection-string=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/RepoUser?authSource=admin
