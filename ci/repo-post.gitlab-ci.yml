repo-post:build:
  extends: .rules_template_repo-post
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  stage: build
  variables:
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_IMAGE: $DOCKER_REGISTRY/repo-post
    DOCKER_TAG: $CI_COMMIT_SHA
  script:
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context . --dockerfile Dockerfiles/repo-post.Dockerfile --destination $DOCKER_IMAGE:$DOCKER_TAG

repo-post:lint:
  extends: .rules_template_repo-post
  image: maven:3.8.5-eclipse-temurin-17-alpine
  stage: lint
  script:
    - cd apps/repo-post
    - mvn spotless:check

repo-post:test:
  extends: .rules_template_repo-post
  image: maven:3.8.5-eclipse-temurin-17
  variables:
    MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    MONGO_INITDB_DATABASE: RepoPost
  stage: test
  services:
    - name: mongo:8.0.6-noble
      alias: mongo
      command: ["mongod", "--bind_ip_all"]
  before_script:
    - apt-get update -y
    - apt-get install -y gnupg wget
    - wget -qO- https://www.mongodb.org/static/pgp/server-8.0.asc | tee /etc/apt/trusted.gpg.d/server-8.0.asc
    - echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-8.0.list
    - apt-get update -y
    - apt-get install -y mongodb-mongosh
  script:
    - cd apps/repo-post
    - mongosh src/main/resources/init.js
    - mvn test
