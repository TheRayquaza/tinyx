apiVersion: apps/v1
kind: Deployment
metadata:
  name: repo-post
  namespace: apps
  labels:
    app: repo-post
spec:
  replicas: 1 # TODO: make it 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: repo-post
  template:
    metadata:
      labels:
        app: repo-post
    spec:
      imagePullSecrets:
        - name: pull-secret
      containers:
        - name: repo-post
          image: registry.cri.epita.fr/ing/majeures/tc/info/student/2026/2025-epitweet-tinyx-02/repo-post:v1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "125m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            ## QUARKUS
            - name: QUARKUS_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: LOG_LEVEL
            - name: QUARKUS_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: QUARKUS_HTTP_PORT
            - name: QUARKUS_HTTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: QUARKUS_HTTP_HOST
            - name: QUARKUS_APP_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: USER_APP_PROFILE
            ## REDIS
            - name: QUARKUS_REDIS_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: QUARKUS_REDIS_HOSTS
            - name: QUARKUS_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: apps-config
                  key: QUARKUS_REDIS_PASSWORD
            - name: REPO_USER_AGGREGATE_CHANNEL
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: USER_AGGREGATE_CHANNEL
            - name: QUARKUS_REDIS_CLIENT_TYPE
              value: "cluster"
            - name: QUARKUS_REDIS_RECONNECT_ATTEMPTS
              value: "3"
            - name: QUARKUS_REDIS_AUTO_FAILOVER
              value: "true"
            ## MONGODB
            - name: QUARKUS_MONGODB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: repo-user-secret
                  key: REPO_POST_MONGODB_ENDPOINT
          - name: REPO_POST_APP_PROFILE
            value: "prod"
          - name: REPO_POST_MINIO_ENDPOINT
            valueFrom:
                configMapKeyRef:
                  name: repo-post-config
                  key: REPO_POST_MINIO_ENDPOINT
          - name: REPO_POST_MINIO_BUCKET
            valueFrom:
                configMapKeyRef:
                  name: repo-post-config
                  key: REPO_POST_MINIO_BUCKET
          - name: REPO_POST_MINIO_ACCESS_KEY
            valueFrom:
                secretKeyRef:
                  name: repo-post-secret
                  key: REPO_POST_MINIO_ACCESS_KEY
          - name: REPO_POST_MINIO_SECRET_KEY
            valueFrom:
                secretKeyRef:
                  name: repo-post-secret
                  key: REPO_POST_MINIO_SECRET_KEY
          - name: REPO_POST_MONGODB_DATABASE
            valueFrom:
                configMapKeyRef:
                  name: repo-post-config
                  key: REPO_POST_MONGODB_DATABASE
