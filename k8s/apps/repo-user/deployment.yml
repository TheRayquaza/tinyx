apiVersion: apps/v1
kind: Deployment
metadata:
  name: repo-user
  namespace: apps
  labels:
    app: repo-user
spec:
  replicas: 1 # TODO: make it 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: repo-user
  template:
    metadata:
      labels:
        app: repo-user
    spec:
      imagePullSecrets:
        - name: pull-secret
      containers:
        - name: repo-user
          image: registry.cri.epita.fr/ing/majeures/tc/info/student/2026/2025-epitweet-tinyx-02/repo-user:v1.0.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080 # the port of the container awx_web
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          # livenessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          # readinessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          env:
            ## QUARKUS
            - name: REPO_USER_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: LOG_LEVEL
            - name: REPO_USER_QUARKUS_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: QUARKUS_HTTP_PORT
            - name: REPO_USER_QUARKUS_HTTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: QUARKUS_HTTP_HOST
            - name: REPO_USER_APP_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: USER_APP_PROFILE
            ## REDIS
            - name: REPO_USER_REDIS_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: repo-user-config
                  key: REPO_USER_REDIS_HOSTS
            - name: REPO_USER_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: repo-user-secret
                  key: REPO_USER_REDIS_PASSWORD
            - name: REPO_USER_AGGREGATE_CHANNEL
              valueFrom:
                configMapKeyRef:
                  name: apps-config
                  key: USER_AGGREGATE_CHANNEL
            ## MONGODB
            - name: REPO_USER_MONGODB_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: repo-user-secret
                  key: REPO_USER_MONGODB_ENDPOINT
            ## MINIO
            - name: REPO_USER_MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: repo-user-config
                  key: REPO_USER_MINIO_ENDPOINT
            - name: REPO_USER_MINIO_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: repo-user-config
                  key: REPO_USER_MINIO_BUCKET
            - name: REPO_USER_MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: repo-user-secret
                  key: REPO_USER_MINIO_ACCESS_KEY
            - name: REPO_USER_MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: repo-user-secret
                  key: REPO_USER_MINIO_SECRET_KEY
