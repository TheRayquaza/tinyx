apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:8.0-M04-alpine3.21
          imagePullPolicy: IfNotPresent
          command: ["redis-server", "/conf/redis.conf", "--protected-mode", "yes", "--requirepass", "admin"]
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_USERNAME
          resources:
            requests:
              memory: "1Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
              cpu: "2"
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: config
              mountPath: /conf
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
      volumes:
        - name: config
          configMap:
            name: redis-config
